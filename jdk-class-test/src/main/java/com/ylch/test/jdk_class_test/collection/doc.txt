Java 中 Comparable 和 Comparator 比较

Comparable 是排序接口。
若一个类实现了Comparable接口，就意味着“该类支持排序”。
 即然实现Comparable接口的类支持排序，假设现在存在
 “实现Comparable接口的类的对象的List列表(或数组)”，
 则该List列表(或数组)可以通过 Collections.sort（或 Arrays.sort）进行排序。

此外，“实现Comparable接口的类的对象”可以用作
“有序映射(如TreeMap)”中的键或“有序集合(TreeSet)”中的元素，而不需要指定比较器。

说明：
假设我们通过 x.compareTo(y) 来
“比较x和y的大小”。
若返回“负数”，意味着“x比y小”；返回“零”，意味着“x等于y”；返回“正数”，意味着“x大于y”。



Comparator 简介

Comparator 是比较器接口。


Comparator 和 Comparable 比较

Comparable是排序接口；若一个类实现了Comparable接口，就意味着“该类支持排序”。
而Comparator是比较器；我们若需要控制某个类的次序，可以建立一个“该类的比较器”来进行排序。

我们不难发现：Comparable相当于“内部比较器”，而Comparator相当于“外部比较器”。
